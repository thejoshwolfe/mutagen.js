child_process = require 'child_process'

!function run_child(cmd, args, cb)
  child = child_process.spawn cmd, args

  # we can get on 'exit' before the sdtout is done flushing
  waiting_counter = 0
  done_with_something = ->
    waiting_counter--
    return if waiting_counter is not 0
    if return_code is not 0
      err = new Error("mutagen child process exited with error code")
      err.stdout = stdout.join('')
      err.stderr = stderr.join('')
      return cb(err)
    cb null, stdout.join ''

  setup_stream = (stream) ->
    collector = []
    stream.setEncoding 'utf8'
    stream.on 'data', !-> collector.push it
    waiting_counter++
    stream.on 'close', !-> done_with_something!
    return collector
  stdout = setup_stream child.stdout
  stderr = setup_stream child.stderr

  return_code = null
  waiting_counter++
  child.on 'exit', !(code) ->
    return_code := code
    done_with_something!

const read_program = """
  import sys,json,mutagen
  print(json.dumps(dict(mutagen.File(sys.argv[1], easy=True) or {})))
"""

export !function read (file, cb)
  run_child 'python', ['-c', read_program, file], (err, stdout) ->
    return cb(err) if err
    cb null, JSON.parse stdout

const edit_program = """
  import sys,mutagen
  f = mutagen.File(sys.argv[1], easy=True)
  for name, value in zip(*[iter(sys.argv[2:])]*2):
    if value != "":
      f[name] = value
    else:
      del f[name]
  f.save()
"""

export !function edit (file, edits, cb)
  args = ['-c', edit_program, file]
  for key, value in edits
    args.push key
    value = "" unless value?
    args.push value
  run_child 'python', args, cb

if require.main is module
  usage = !->
    console.log """
      Usage: read path-to-file
      Usgae: edit path-to-file key=value ...
    """
    process.exit 1
  args = process.argv.slice 2
  command = args.shift!
  file = args.shift!
  usage! unless file
  check_error = !(err) ->
    return unless err
    console.log err
    process.exit 1
  switch command
    case "read"
      read file, !(err, json) ->
        check_error err
        console.log json
    case "edit"
      edits = {}
      for arg of args
        [key, value] = arg.split("=")
        edits[key] = value
      edit file, edits, check_error
    default
      usage!

